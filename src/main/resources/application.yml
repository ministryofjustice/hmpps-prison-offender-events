spring:
  application:
    name: offender-events

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  jpa:
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    open-in-view: false

  flyway:
    enabled: true
    baselineOnMigrate: true
    schemas: OFFENDER_EVENTS
    locations: classpath:/db/migration/h2,classpath:/db/migration/common
    url: 'jdbc:h2:mem:offender-events-db;MODE=PostgreSQL;DB_CLOSE_DELAY=-1'
    user: sa
    password: ''
    placeholders:
      database_password: dummy

  datasource:
    # This reopens the H2 database prepared by flyway with default schema and user OFFENDER_EVENTS
    url: 'jdbc:h2:mem:offender-events-db;MODE=PostgreSQL;SCHEMA=OFFENDER_EVENTS;IFEXISTS=TRUE'
    continue-on-error: true
    username: offender_events
    password: dummy

    hikari:
      pool-name: OffenderEvents-CP
      connectionTimeout: 1000
      validationTimeout:  500


server:
  port: 8080
  servlet:
    context-path: /
  use-forward-headers: true
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol_header: x-forwarded-proto

logging:
  level:
    org.springframework: INFO
    org.springframework.security: INFO
    uk.gov.justice.hmpps: DEBUG

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health, ping'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-details: always
    info:
      cache:
        time-to-live: 2000ms

azure:
  application-insights:
    web:
      enable-W3C: true

cloud:
  aws:
    stack:
      auto: false
    region:
      static: eu-west-2

application:
  events:
    max:
      range:
        hours: 1
    poll:
      frequency: 60000

custodyapi:
  client:
    clientId: ${offender.events.client.id}
    clientSecret: ${offender.events.client.secret}
    accessTokenUri: ${oauth.api.base.url}/oauth/token
    tokenName: custody_token
    authenticationScheme: header
    clientAuthenticationScheme: header
