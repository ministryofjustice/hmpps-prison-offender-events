name: Security OWASP dependency check

on:
  workflow_call:
    inputs:
      channel_id:
        description: 'The slack channel ID to send a message on failure. If this is not provided then no message is sent.'
        required: false
        default: 'NO_SLACK'
        type: string
      subproject:
        description: 'For gradle multi module projects, leave blank for single module projects'
        required: false
        default: ''
        type: string
      slack_include_summary:
        description: 'boolean to include a summary of vulnerabilities in the Slack message'
        required: false
        default: true
        type: boolean
    secrets:
      HMPPS_SRE_SLACK_BOT_TOKEN:
        description: 'Slack bot token'
        required: false

permissions:
  contents: read
  security-events: write

jobs:
  security-owasp-check:
    name: Security OWASP dependency check
    runs-on: [self-hosted, hmpps-github-actions-runner]
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Run gradle OWASP Dependency Check Analyse
      id: owasp-analyse
      run: ./gradlew ${{ inputs.subproject }}:dependencyCheckAnalyze --info
      continue-on-error: true
    # Upload Sarif file: this will attempt to upload the sarif file for private/internal repositories as well
    - name: OWASP upload sarif
      id: owasp-upload-sarif
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ inputs.subproject == '' && '.' || inputs.subproject }}/build/reports/dependency-check-report.sarif
        category: gradle-owasp-dependency-check
      # don't stop the job even if Github Advanced Security isn't enabled
      continue-on-error: true
    - uses: actions/upload-artifact@v4
      id: owasp-upload-artifact
      with:
        name: gradle-owasp-dependency-check-${{ inputs.subproject == '' && github.event.repository.name || inputs.subproject }}
        path: ${{ inputs.subproject == '' && '.' || inputs.subproject }}/build/reports/dependency-check-report.html
    - name: Prepare OWASP summary
      id: owasp-summary
      run: |
        formatted_output=$(jq -r '.runs[0].tool.driver.rules[] | [.id, .shortDescription.text, .properties.cvssv2_score, .properties.cvssv2_severity] | @tsv' ${{ inputs.subproject == '' && '.' || inputs.subproject }}/build/reports/dependency-check-report.sarif \
        | awk -F'\t' '{print $1" - "$NF" ("$(NF-1)") - "substr($2,index($2,":")+1)}' \
        | awk '{printf "%s\\n", $0}') 
        echo "Vulnerability Summary"
        echo "====================="
        echo "${formatted_output}" | sed 's/\\n/\n/g'
        slack_summary="$(echo "${formatted_output}" | awk '{s=s $0} END {if (length(s) >= 3000) print substr(s, 1, 2997) "..."; else print s}')"
        echo "summary=${slack_summary}" >> $GITHUB_ENV
    - name: Gradle OWASP slack notification
      uses: ministryofjustice/hmpps-github-actions/.github/actions/slack_codescan_notification@v2 # WORKFLOW_VERSION
      if: (failure() || steps.owasp-analyse.outcome == 'failure') && inputs.channel_id != 'NO_SLACK'
      with:
        title: "Gradle OWASP"
        warningOnly: ${{ steps.owasp-upload-sarif.outcome == 'success' && steps.owasp-upload-artifact.outcome == 'success' }}
        channel_id: ${{ inputs.channel_id}}
        SLACK_BOT_TOKEN: ${{ secrets.HMPPS_SRE_SLACK_BOT_TOKEN }}
        subproject: ${{ inputs.subproject }}
        summary: ${{ inputs.slack_include_summary && env.summary || '' }}
